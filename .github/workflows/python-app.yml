name: FastAPI application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: ${{ secrets.DBUSER }}
          POSTGRES_PASSWORD: ${{ secrets.DBPASSWORD }}
          POSTGRES_DB: ${{ secrets.DBNAME }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U ${{ secrets.DBUSER }}"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DATABASE_URL: postgres://${{ secrets.DBUSER }}:${{ secrets.DBPASSWORD }}@localhost:5432/${{ secrets.DBNAME }}

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"
    - name: Print secrets
      run: |
        echo "DBUSER: ${{ secrets.DBUSER }}"
        echo "DBPASSWORD: ${{ secrets.DBPASSWORD }}"
        echo "DBNAME: ${{ secrets.DBNAME }}"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest fastapi psycopg2-binary
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
      run: |
        pytest
    - name: Run FastAPI
      run: |
        uvicorn app.main:app --host 0.0.0.0 --port 8000
